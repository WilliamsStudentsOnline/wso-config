##### WSO-Config WSO 2.0 #####

- name: Install dependencies
  ansible.builtin.dnf:
    name:
     - php
     - composer
    state: present
  when: inventory_hostname == 'wso_backup'

- name: Ensure proper subdirs exist
  ansible.builtin.file:
    path: /srv/www/
    state: directory
    owner: nginx
    group: nginx
    mode: '0755'
  when: inventory_hostname == 'wso_backup'

- name: Git checkout Cachet
  ansible.builtin.git:
    repo: 'https://github.com/cachethq/Cachet.git'
    dest: /srv/www/cachet
    update: false
  when: inventory_hostname == 'wso_backup'

- name: Set permissions with shell (recursive chown)
  ansible.builtin.shell: chown -R nginx:nginx /srv/www/cachet
  when: inventory_hostname == 'wso_backup'

- name: Set SELinux context on /srv and subdirs for Nginx
  ansible.builtin.command: semanage fcontext -a -t httpd_sys_content_t "{{ item }}(/.*)?"
  loop:
    - /srv
    - /srv/www
    - /srv/www/cachet
  changed_when: false
  ignore_errors: true  # semanage errors if already exists
  when: inventory_hostname == 'wso_backup'

- name: Restore SELinux context on /srv and subdirs
  ansible.builtin.command: restorecon -Rv /srv /srv/www /srv/www/cachet
  when: inventory_hostname == 'wso_backup'
  
- name: Ensure /srv/www/wiki has o+x for Nginx directory access
  ansible.builtin.file:
    path: "{{ item }}"
    mode: '0755'
  loop:
    - /srv
    - /srv/www
    - /srv/www/cachet
  when: inventory_hostname == 'wso_backup'

- name: Enable Nginx access boolean for user content
  ansible.builtin.command: setsebool -P httpd_read_user_content 1
  when: inventory_hostname == 'wso_backup'

# I don't know WHY it's broken but this fixes it
# TODO: 777 perms is nasty work
- name: Fix SELinux perms in Cachet
  ansible.builtin.shell: |
   semanage fcontext -a -t httpd_sys_rw_content_t "/srv/www/cachet/storage(/.*)?"
   semanage fcontext -a -t httpd_sys_rw_content_t "/srv/www/cachet/bootstrap/cache(/.*)?"
   semanage fcontext -a -t httpd_sys_rw_content_t "/srv/www/cachet/database(/.*)?"
   restorecon -Rv /srv/www/cachet/
   chown nginx:nginx /srv/www/cachet/database
   chmod -R 777 /srv/www/cachet/storage
   chmod -R 777 /srv/www/cachet/bootstrap
  when: inventory_hostname == 'wso_backup' 

- name: Copy Cachet config file
  ansible.builtin.copy:
    src: env-file
    force: true
    dest: /srv/www/cachet/.env
    mode: 0644
    owner: nginx
    group: nginx
  when: inventory_hostname == 'wso_backup'

# TODO: change this in production
- name: Deploy Cachet vhost
  ansible.builtin.copy:
    dest: /etc/nginx/conf.d/cachet.conf
    force: true
    content: |
         server {
             listen 80;
             server_name cachet.local;

             root /srv/www/cachet/public;
             index index.html index.htm;

             location / {
                 try_files $uri $uri/ =404;
             }
             access_log /var/log/nginx/cachet_access.log;
             error_log /var/log/nginx/cachet_error.log;
         }
  when: inventory_hostname == 'wso_backup'

- name: Restart Nginx
  ansible.builtin.systemd:
    name: nginx
    state: restarted
  when: inventory_hostname == 'wso_backup'

# note that this runs as the nginx user!
- name: Create Cachet cronjob
  ansible.builtin.cron:
    name: "Refresh Cachet"
    user: nginx
    disabled: true
    minute: "*"
    job: "/bin/bash -l -c 'php /path/to/cachet/artisan schedule:run >> /dev/null'"
  when: inventory_hostname == 'wso_backup'

# note that cachet doesn't have its own systemd daemon. it's a static site served by nginx.

# Things you will still need to do:
# (also, make sure you do all tasks using sudo -u nginx)

# - steps 4-10 on this page: https://docs.cachethq.io/v3.x/installation
# - enable the scheduler by uncommenting the cron job
# - go into Cachet's web GUI and fix it



