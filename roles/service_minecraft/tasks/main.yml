##### WSO-Config WSO 2.0 #####

# okay, so we basically have the following setup:
# - there's the base MC server (paper)
# - dynmap is for the map, and will be apache bound to its own subsite, not its custom port
# - mcrcon is going to be allowed but with a super duper strong password
# - chunky is a one-time affair: use it to render in the 8k world, 1k world_nether, and 8k end one time
# - cron jobs are going to run every morning at 3AM to update the dynmap
# - viaversion and maybe geiser are there to allow connections from weird mc versions
# - maybe a resource pack from vanilla tweaks. MAYBE.
# - lucky perms is there to prevent users from going nuts with the commands
# with this setup, the server basically manages itself, and users can use it as they want.
# still going to write a custom plugin and put it somewhere and it'll give every player a rulebook item & tellraw rules

# TODO: look into lazymc: https://github.com/timvisee/lazymc?tab=readme-ov-file
# also TODO: switch to BlueMap https://bluemap.bluecolored.de/community/BluemapLazyServer.html

- name: Install dependencies
  ansible.builtin.dnf:
    name: java-21-openjdk-headless
    state: present
  when: inventory_hostname == 'wso_prod'

- name: Create Minecraft user for security
  ansible.builtin.user:
    name: mc
    comment: Minecraft Server User
    uid: 2011  # year minecraft 1.0.0 released
    shell: /bin/false
    home: /opt/minecraft
    create_home: true
    skeleton: ""  # never logged into so false need for it
  when: inventory_hostname == 'wso_prod'

- name: Create Minecraft directories
  ansible.builtin.file:
    path: /opt/minecraft/plugins
    state: directory
    owner: mc
    recurse: true
  when: inventory_hostname == 'wso_prod'

# spark comes pre-bundled with paper noww.

# 1.21.7 compatible
- name: Download Paper JAR
  ansible.builtin.get_url:
    url: https://fill-data.papermc.io/v1/objects/83838188699cb2837e55b890fb1a1d39ad0710285ed633fbf9fc14e9f47ce078/paper-1.21.7-32.jar
    dest: /opt/minecraft/paper.jar
    mode: 0644
  when: inventory_hostname == 'wso_prod'

# 1.21.7 compatible
- name: Download Chunky plugin
  ansible.builtin.get_url:
    url: https://cdn.modrinth.com/data/fALzjamp/versions/P3y2MXnd/Chunky-Bukkit-1.4.40.jar
    dest: /opt/minecraft/plugins/chunky.jar
    mode: 0644
  when: inventory_hostname == 'wso_prod'

# 1.21.7 compatible
- name: Download ChunkyBorder plugin
  ansible.builtin.get_url:
    url: https://cdn.modrinth.com/data/s86X568j/versions/asaBBItO/ChunkyBorder-Bukkit-1.2.23.jar
    dest: /opt/minecraft/plugins/chunky-border.jar
    mode: 0644
  when: inventory_hostname == 'wso_prod'

# 1.21.7 compatible
- name: Download ViaVersion plugin
  ansible.builtin.get_url:
    url: https://cdn.modrinth.com/data/P1OZGk5p/versions/e4eSuLAu/ViaVersion-5.4.2.jar
    dest: /opt/minecraft/plugins/viaversion.jar
    mode: 0644
  when: inventory_hostname == 'wso_prod'

# 1.21.7 compatible
- name: Download ViaBackwards plugin
  ansible.builtin.get_url:
    url: https://cdn.modrinth.com/data/NpvuJQoq/versions/tdyh8oTV/ViaBackwards-5.4.2.jar
    dest: /opt/minecraft/plugins/viabackwards.jar
    mode: 0644
  when: inventory_hostname == 'wso_prod'

# 1.21.7 compatible
- name: Download ViaVersionStatus plugin
  ansible.builtin.get_url:
    url: https://cdn.modrinth.com/data/PzvpAa1j/versions/2IhfwIG1/ViaVersionStatus-4.00.jar
    dest: /opt/minecraft/plugins/viaversion-status.jar
    mode: 0644
  when: inventory_hostname == 'wso_prod'

# 1.21.7 compatible
- name: Download BlueMap plugin
  ansible.builtin.get_url:
    url: https://cdn.modrinth.com/data/swbUV1cr/versions/ucikJabQ/bluemap-5.10-spigot.jar
    dest: /opt/minecraft/plugins/bluemap.jar
    mode: 0644
  when: inventory_hostname == 'wso_prod'

# 1.21.7 compatible
- name: Download MiniMOTD plugin
  ansible.builtin.get_url:
    url: https://cdn.modrinth.com/data/16vhQOQN/versions/SHT4Xj7n/minimotd-bukkit-2.1.7.jar
    dest: /opt/minecraft/plugins/mini-motd.jar
    mode: 0644
  when: inventory_hostname == 'wso_prod'

# 1.21.7 compatible
- name: Download LuckPerms plugin
  ansible.builtin.get_url:
    url: https://cdn.modrinth.com/data/Vebnzrzj/versions/ZPtLedoF/LuckPerms-Bukkit-5.5.0.jar
    dest: /opt/minecraft/plugins/essentialsx.jar
    mode: 0644
  when: inventory_hostname == 'wso_prod'

# 1.21.7 compatible
- name: Download CalcMod plugin
  ansible.builtin.get_url:
    url: https://cdn.modrinth.com/data/XoHTb2Ap/versions/kp4tHG1E/calcmod-1.4.2%2Bpaper.1.21.5.jar
    dest: /opt/minecraft/plugins/calcmod.jar
    mode: 0644
  when: inventory_hostname == 'wso_prod'

# we used to use coreprotect, but it's paid now, so no dice.
# if that changes, add it back

- name: Create MiniMOTD directories
  ansible.builtin.file:
    path: /opt/minecraft/plugins/MiniMOTD/icons
    state: directory
    owner: mc
    recurse: true
  when: inventory_hostname == 'wso_prod'

- name: Copy MiniMOTD config files
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: mc
    force: true
  when: inventory_hostname == 'wso_prod'
  loop:
    - {src: "minimotd_main.conf", dest: "/opt/minecraft/plugins/MiniMOTD/main.conf"}
    - {src: "minimotd_plugin_settings.conf", dest: "/opt/minecraft/plugins/MiniMOTD/plugin_settings.conf"}
    - {src: "ephelia_face_smol.png", dest: "/opt/minecraft/plugins/MiniMOTD/icons/"}

- name: Create ChunkyBorder directories
  ansible.builtin.file:
    path: /opt/minecraft/plugins/ChunkyBorder
    state: directory
    owner: mc
    recurse: true
  when: inventory_hostname == 'wso_prod'

- name: Copy ChunkyBorder config files
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: mc
    force: true
  when: inventory_hostname == 'wso_prod'
  loop:
    - {src: "borders.json", dest: "/opt/minecraft/plugins/ChunkyBorders/"}
    - {src: "chunkyborders-config.yml", dest: "/opt/minecraft/plugins/ChunkyBorders/config.yml"}

- name: Create bStats directories
  ansible.builtin.file:
    path: /opt/minecraft/plugins/bStats
    state: directory
    owner: mc
    recurse: true
  when: inventory_hostname == 'wso_prod'

- name: Create Bluemap directories
  ansible.builtin.file:
    path: /opt/minecraft/plugins/BlueMap/storages
    state: directory
    owner: mc
    recurse: true
  when: inventory_hostname == 'wso_prod'

- name: Copy Bluemap config files
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: mc
    force: true
  when: inventory_hostname == 'wso_prod'
  loop:
    - {src: "bluemap-core.conf", dest: "/opt/minecraft/plugins/BlueMap/core.conf"}
    - {src: "bluemap-webserver.conf", dest: "/opt/minecraft/plugins/BlueMap/webserver.conf"}
    - {src: "bluemap-file.conf", dest: "/opt/minecraft/plugins/BlueMap/storages/file.conf"}

# it's lowkey evil that we must do this, but I don't want data leaks
- name: Disable Minecraft telemetry (bStats)
  ansible.builtin.copy:
    src: config-bStats.yml
    dest: /opt/minecraft/plugins/bStats/config.yml
    mode: 0755
  when: inventory_hostname == 'wso_prod'

# Unfortunately, you'll need to add your own datapacks.

- name: Accept Minecraft EULA
  ansible.builtin.copy:
    dest: /opt/minecraft/eula.txt
    content: "eula=true\n"
    force: true
    owner: mc
  when: inventory_hostname == 'wso_prod'

- name: Create Minecraft launch script
  ansible.builtin.copy:
    src: start.sh
    dest: /opt/minecraft/start.sh
    mode: 0755
  when: inventory_hostname == 'wso_prod'

- name: Create Minecraft manual launch script
  ansible.builtin.copy:
    src: start.sh
    dest: /opt/minecraft/start-manually.sh
    mode: 0755
  when: inventory_hostname == 'wso_prod'

# this adds in the mcrcon tool, which is useful,
# as it lets you basically issue server commands.
- name: Clone mcrcon utility
  ansible.builtin.git:
    repo: 'https://github.com/Tiiffi/mcrcon'
    dest: /opt/mcrcon
    update: no
    version: v0.7.2
  when: inventory_hostname == 'wso_prod'

# TODO: when you deploy this, remember to change server.preferences
# to bind correctly so mcrcon can read it!
# also you still need to compile it yourself.
- name: Chown mcrcon to mc user
  ansible.builtin.command: chown -R mc:mc /opt/mcrcon
  when: inventory_hostname == 'wso_prod'

- name: Create Minecraft server properties
  ansible.builtin.copy:
    src: server.properties
    dest: /opt/minecraft/server.properties
    force: false
    mode: 0755
  when: inventory_hostname == 'wso_prod'

- name: Copy Minecraft systemd service
  ansible.builtin.copy:
    src: minecraft.service
    force: true
    dest: /usr/lib/systemd/system/minecraft.service
  when: inventory_hostname == 'wso_prod'

# TODO: switch this on for prod, but on test VMs it's too intensive

# - name: Enable and start Minecraft
#   systemd:
#     name: minecraft
#     enabled: true
#     state: started
#   when: inventory_hostname == 'wso_prod'
