##### WSO-Config WSO 2.0 #####

- name: Install dependencies
  dnf:
    name: java-21-openjdk-headless
    state: present
  when: inventory_hostname == 'wso_prod'

- name: Create Minecraft user for security
  user:
     name: mc
     comment: Minecraft Server User
     uid: 2011 # year minecraft 1.0.0 released
     shell: /bin/false
     home: /opt/minecraft
     create_home: yes
     skeleton: "" # never logged into so no need for it
  when: inventory_hostname == 'wso_prod'

- name: Create Minecraft directories
  file:
    path: /opt/minecraft/plugins
    state: directory
    owner: mc
    recurse: yes
  when: inventory_hostname == 'wso_prod'

- name: Download Paper JAR
  get_url:
  # TODO: paper has updated, but we're waiting for just ChunkyBorder to update...
    url: https://api.papermc.io/v2/projects/paper/versions/1.21.4/builds/232/downloads/paper-1.21.4-232.jar
    dest: /opt/minecraft/paper.jar
    mode: 0644
  when: inventory_hostname == 'wso_prod'

# TODO: check all of these plugins before any update!
# we are running 1.21.4. at some point, we should update to 1.21.7, and then fix the version there.

- name: Download Spark plugin
  get_url:
    url: https://ci.lucko.me/job/spark/487/artifact/spark-bukkit/build/libs/spark-1.10.138-bukkit.jar
    dest: /opt/minecraft/plugins/spark.jar
    mode: 0644
  when: inventory_hostname == 'wso_prod'

- name: Download Chunky plugin
  get_url:
    url: https://cdn.modrinth.com/data/fALzjamp/versions/SmZRkQyR/Chunky-Bukkit-1.4.36.jar
    dest: /opt/minecraft/plugins/chunky.jar
    mode: 0644
  when: inventory_hostname == 'wso_prod'

- name: Download ChunkyBorder plugin
  get_url:
    url: https://cdn.modrinth.com/data/s86X568j/versions/asaBBItO/ChunkyBorder-Bukkit-1.2.23.jar
    dest: /opt/minecraft/plugins/chunky-border.jar
    mode: 0644
  when: inventory_hostname == 'wso_prod'

- name: Download ViaVersion plugin
  get_url:
    url: https://cdn.modrinth.com/data/P1OZGk5p/versions/cdC9vQSF/ViaVersion-5.3.2.jar
    dest: /opt/minecraft/plugins/viaversion.jar
    mode: 0644
  when: inventory_hostname == 'wso_prod'

- name: Download Dynmap plugin
  get_url:
    url: https://cdn.modrinth.com/data/fRQREgAc/versions/ImNNT17B/Dynmap-3.7-beta-8-spigot.jar
    dest: /opt/minecraft/plugins/dynmap.jar
    mode: 0644
  when: inventory_hostname == 'wso_prod'

- name: Download SeeMore plugin
  get_url:
    url: https://cdn.modrinth.com/data/IEt1Yy3F/versions/QXCh3qCi/SeeMore-1.0.2.jar
    dest: /opt/minecraft/plugins/seemore.jar
    mode: 0644
  when: inventory_hostname == 'wso_prod'

- name: Download MiniMOTD plugin
  get_url:
    url: https://cdn.modrinth.com/data/16vhQOQN/versions/SgOOeke0/minimotd-bukkit-2.1.5.jar
    dest: /opt/minecraft/plugins/mini-motd.jar
    mode: 0644
  when: inventory_hostname == 'wso_prod'

- name: Download EssentialsX plugin
  get_url:
    url: https://cdn.modrinth.com/data/hXiIvTyT/versions/SKQwLLoQ/EssentialsX-2.21.0.jar
    dest: /opt/minecraft/plugins/essentialsx.jar
    mode: 0644
  when: inventory_hostname == 'wso_prod'

- name: Download LuckPerms plugin
  get_url:
    url: https://download.luckperms.net/1594/bukkit/loader/LuckPerms-Bukkit-5.5.9.jar
    dest: /opt/minecraft/plugins/essentialsx.jar
    mode: 0644
  when: inventory_hostname == 'wso_prod'
  
- name: Create MiniMOTD directories
  file:
    path: /opt/minecraft/plugins/MiniMOTD/icons
    state: directory
    owner: mc
    recurse: yes
  when: inventory_hostname == 'wso_prod'

- name: Copy MiniMOTD config files
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: mc
    force: yes
  when: inventory_hostname == 'wso_prod'
  loop:
    - { src: "minimotd_main.conf", dest: "/opt/minecraft/plugins/MiniMOTD/main.conf" }
    - { src: "minimotd_plugin_settings.conf", dest: "/opt/minecraft/plugins/MiniMOTD/plugin_settings.conf" }
    - { src: "ephelia_face_smol.png", dest: "/opt/minecraft/plugins/MiniMOTD/icons/" }

- name: Download CoreProtect plugin
  get_url:
    url: https://cdn.modrinth.com/data/Lu3KuzdV/versions/llmrc4cl/CoreProtect-22.4.jar
    dest: /opt/minecraft/plugins/core-protect.jar
    mode: 0644
  when: inventory_hostname == 'wso_prod'

- name: Create ChunkyBorder directories
  file:
    path: /opt/minecraft/plugins/ChunkyBorder
    state: directory
    owner: mc
    recurse: yes
  when: inventory_hostname == 'wso_prod'

- name: Create Dynmap directories
  file:
    path: /opt/minecraft/plugins/dynmap
    state: directory
    owner: mc
    recurse: yes
  when: inventory_hostname == 'wso_prod'

- name: Create Dynmap config file
  copy:
    src: dynmap-config.txt
    dest: /opt/minecraft/plugins/dynmap/configuration.txt
    force: yes
    owner: mc
  when: inventory_hostname == 'wso_prod'

- name: Copy ChunkyBorder config files
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: mc
    force: yes
  when: inventory_hostname == 'wso_prod'
  loop:
    - { src: "borders.json", dest: "/opt/minecraft/plugins/ChunkyBorders/" }
    - { src: "chunkyborders-config.yml", dest: "/opt/minecraft/plugins/ChunkyBorders/config.yml" }

- name: Create bStats directories
  file:
    path: /opt/minecraft/plugins/bStats
    state: directory
    owner: mc
    recurse: yes
  when: inventory_hostname == 'wso_prod'

# it's lowkey evil that we must do this, but I don't want data leaks
- name: Disable Minecraft telemetry (bStats)
  copy:
    src: config-bStats.yml
    dest: /opt/minecraft/plugins/bStats/config.yml
    mode: 0755
  when: inventory_hostname == 'wso_prod'

# Unfortunately, you'll need to add your own datapacks.

- name: Accept Minecraft EULA
  copy:
    dest: /opt/minecraft/eula.txt
    content: "eula=true\n"
    force: yes
    owner: mc
  when: inventory_hostname == 'wso_prod'

- name: Create Minecraft launch script
  copy:
    src: start.sh
    dest: /opt/minecraft/start.sh
    mode: 0755
  when: inventory_hostname == 'wso_prod'

- name: Create Minecraft manual launch script
  copy:
    src: start.sh
    dest: /opt/minecraft/start-manually.sh
    mode: 0755
  when: inventory_hostname == 'wso_prod'

# this adds in the mcrcon tool, which is useful,
# as it lets you basically issue server commands.
- name: Clone mcrcon utility
  ansible.builtin.git:
    repo: 'https://github.com/Tiiffi/mcrcon'
    dest: /opt/mcrcon
  when: inventory_hostname == 'wso_prod'

# TODO: when you deploy this, remember to change server.preferences
# to bind correctly so mcrcon can read it!
- name: Chown mcrcon to mc user
  ansible.builtin.command: chown -R mc:mc /opt/mcrcon
  when: inventory_hostname == 'wso_prod'

# TODO: make more of these that handle the render commands
- name: "Create mcrcon cronjob: broadcast server render warning"
  ansible.builtin.cron:
    name: "MC Server Render Warning"
    hour: "3"
    minute: "0"
    disabled: true
    job: >
      mcrcon -H localhost -p $PASSWORD
      'tellraw @p {
        "text": "Server will start rendering soon!\nThis will significantly degrade performance. Consider logging off and going to bed."
      }'    

- name: Create Minecraft server properties
  copy:
    src: server.properties
    dest: /opt/minecraft/server.properties
    force: no
    mode: 0755
  when: inventory_hostname == 'wso_prod'

- name: Copy Minecraft systemd service
  copy:
    src: minecraft.service
    force: yes
    dest: /usr/lib/systemd/system/minecraft.service
  when: inventory_hostname == 'wso_prod'

# TODO: switch this on for prod, but on test VMs it's too intensive

# - name: Enable and start Minecraft
#   systemd:
#     name: minecraft
#     enabled: yes
#     state: started
#   when: inventory_hostname == 'wso_prod'

